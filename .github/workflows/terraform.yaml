on:
  push:
    branches:
    - main
  schedule:
  - cron: '45 23 1 * *'

permissions:
  id-token: write

env:
  ARM_USE_OIDC: 'true'
  ARM_ENVIRONMENT: 'public'
  ARM_CLIENT_ID: '${{ secrets.AZURE_CLIENT_ID }}'
  ARM_TENANT_ID: '${{ secrets.AZURE_TENANT_ID }}'
  ARM_SUBSCRIPTION_ID: '${{ secrets.AZURE_SUBSCRIPTION_ID }}'
  CLOUDFLARE_API_TOKEN: '${{ secrets.CLOUDFLARE_API_TOKEN }}'
  TF_CLI_ARGS_init: '-backend-config=key=${{ secrets.TERRAFORM_BACKEND_FILENAME }}'
  TF_INPUT: 0
  TF_VAR_mca: '{"account":"${{ secrets.AZURE_MCA_ACCOUNT }}","profile":"${{ secrets.AZURE_MCA_PROFILE }}","invoice":"${{ secrets.AZURE_MCA_INVOICE }}"}'
  TF_VAR_primary: '${{ secrets.PRIMARY_CONTACT }}'
  TF_VAR_domain: '${{ vars.APEX_DOMAIN }}'
  TF_VAR_github: '{"username":"${{ github.repository_owner }}","repository":"${{ github.repository }}"}'

jobs:
  plan:
    runs-on: ubuntu-latest
    environment: devops
    steps:
    - name: checkout
      uses: actions/checkout@v4
    - name: terraform
      uses: hashicorp/setup-terraform@v3
    - name: terraform fmt
      shell: bash
      run: terraform fmt -check -diff
    - name: terraform init
      shell: bash
      run: terraform init
    - name: terraform plan
      id: plan
      shell: bash
      run: terraform plan -detailed-exitcode
    outputs:
      plan: ${{ steps.plan.outputs.exitcode }}
  apply:
    runs-on: ubuntu-latest
    needs: plan
    if: needs.plan.outputs.plan == 2
    environment: devops
    steps:
    - name: checkout
      uses: actions/checkout@v4
    - name: terraform
      uses: hashicorp/setup-terraform@v3
    - name: terraform init
      shell: bash
      run: terraform init
    - name: az login
      uses: azure/login@v2
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
    - name: terraform apply
      shell: bash
      run: terraform apply -auto-approve
